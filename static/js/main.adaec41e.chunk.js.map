{"version":3,"sources":["components/Register/search.svg","components/Register/Register.js","components/TimePassed/TimePassed.js","components/Tweets/Tweet/Tweet.js","components/Tweets/Tweets.js","containers/Feed/Feed.js","components/SearchBar/SearchBar.js","containers/Trending/Trending.js","hooks/useUser.js","containers/Notification/Notific/Notific.js","containers/Notification/Notification.js","containers/Layout/Layout.js","containers/Sidenav/SidenavItem/SidenavItem.js","components/Avatar/Avatar.js","Context/TweetContext.js","containers/Sidenav/CreateTweet/CreateTweet.js","containers/Sidenav/CreateTweet/CreateTweetBox/CreateTweetBox.js","components/UserProfile/UserProfile.js","containers/Sidenav/Sidenav.js","App.js","reportWebVitals.js","index.js","config/firebase.config.js"],"names":["Register","signInWithGoogle","className","onClick","src","GoogleIcon","alt","TimePassed","created_at","useState","changeInterval","setChangeInterval","useEffect","timeOut","setInterval","Math","random","clearInterval","timePassed","time","Date","constructor","getTime","time_formats","seconds","token","list_choice","abs","format","i","floor","Tweet","tweet","tweetSentence","split","forEach","word","push","buildTweetSentence","user","photoURL","name","username","style","minWidth","Tweets","tweets","loadingMessage","length","map","id","Feed","setTweets","firebase","database","ref","orderByChild","on","snapshot","tweetArray","tweetsResponse","val","Object","keys","key","tweetRevArray","reverse","SearchBar","searchTerm","changeSearchTerm","searchTag","type","maxLength","value","onChange","Trending","setSearchTerm","event","target","queryText","startAt","endAt","alert","useUser","auth","currentUser","displayName","email","uid","Notific","notific","title","Notification","notifications","setNotifications","notificationArray","notificationResponse","notificRevArray","noti","Layout","path","exact","to","SidenavItem","icon","link","classList","pop","join","Avatar","toggleShowUserPorfile","TweetContext","React","createContext","changeCreateTweet","CreateTweet","tweetContext","useContext","withRouter","history","tweetText","setTweetText","rows","placeholder","tag","payload","now","timeStamp","set","UserProfile","signOut","Sidenav","createTweet","setCreateTweet","showUserPorfile","setShowUserPorfile","navList","Provider","navItem","App","authState","setAuthState","onAuthStateChanged","provider","GoogleAuthProvider","signInWithPopup","then","result","notificationsPaylaod","catch","error","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adaec41e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.813ef9bb.svg\";","import React from 'react'\r\nimport GoogleIcon from './search.svg';\r\n\r\nconst Register = ({ signInWithGoogle }) => {\r\n    return (\r\n        <div className=\"w-screen h-screen absolute top-0 left-0 bg-gray-900 bg-opacity-90\">\r\n            <div>\r\n                <div className=\"bg-gray-900 opacity-100 rounded-md px-5 py-2 max-w-lg mx-auto my-10 flex justify-center items-center\">\r\n                    <button onClick={signInWithGoogle} className=\"my-10 rounded-md bg-blue-600 hover:bg-blue-700 shadow flex justify-center items-center\">\r\n                        <span className=\"bg-white p-2 rounded\">\r\n                            <img src={GoogleIcon} className=\"w-8 h-8\" alt=\"register with google\" />\r\n                        </span>\r\n                        <span className=\"mx-4 tracking-wider  text-white\">Register With Google</span>\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"text-gray-300 max-w-md mx-auto text-xs p-5 border rounded\">\r\n                <ul>\r\n                    <li className=\"mt-2\"> Hey user , Don't worry of you Log In with Google this is just for test purpose. </li>\r\n                    <li className=\"mt-2\"> We Don't have any intention to sell your any of data to Third Party </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import { useEffect, useState } from \"react\"\r\n\r\nconst TimePassed = ({ created_at }) => {\r\n\r\n  const [changeInterval, setChangeInterval] = useState()\r\n\r\n  useEffect(() => {\r\n\r\n    const timeOut = setInterval(() => {\r\n      setChangeInterval(Math.random())\r\n    }, 10000)\r\n    return () => {\r\n      clearInterval(timeOut);\r\n    }\r\n  }, [changeInterval])\r\n\r\n  return (\r\n    <span className=\"text-gray-500 text-xs\"> {timePassed(created_at)}  </span>\r\n  )\r\n}\r\n\r\nexport default TimePassed;\r\n\r\n\r\nconst timePassed = (time) => {\r\n\r\n  switch (typeof time) {\r\n    case 'number':\r\n      break;\r\n    case 'string':\r\n      time = +new Date(time);\r\n      break;\r\n    case 'object':\r\n      if (time.constructor === Date) time = time.getTime();\r\n      break;\r\n    default:\r\n      time = +new Date();\r\n  }\r\n  var time_formats = [\r\n    [60, 'seconds', 1], // 60\r\n    [120, '1 minute ago', '1 minute from now'], // 60*2\r\n    [3600, 'minutes', 60], // 60*60, 60\r\n    [7200, '1 hour ago', '1 hour from now'], // 60*60*2\r\n    [86400, 'hours', 3600], // 60*60*24, 60*60\r\n    [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\r\n    [604800, 'days', 86400], // 60*60*24*7, 60*60*24\r\n    [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\r\n    [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\r\n    [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\r\n    [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\r\n    [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\r\n    [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\r\n    [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\r\n    [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\r\n  ];\r\n  var seconds = (+new Date() - time) / 1000,\r\n    token = 'ago',\r\n    list_choice = 1;\r\n\r\n  if (seconds === 0) {\r\n    return 'Just now'\r\n  }\r\n  if (seconds < 0) {\r\n    seconds = Math.abs(seconds);\r\n    token = 'from now';\r\n    list_choice = 2;\r\n  }\r\n  var i = 0,\r\n    format;\r\n  while (format = time_formats[i++])\r\n    if (seconds < format[0]) {\r\n      if (typeof format[2] == 'string')\r\n        return format[list_choice];\r\n      else\r\n        return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\r\n    }\r\n  return time;\r\n}\r\n","import TimePassed from './../../TimePassed/TimePassed';\r\nimport './Tweet.css';\r\n\r\nconst Tweet = ({ tweet }) => {\r\n\r\n    const buildTweetSentence = () => {\r\n        const tweetSentence = [];\r\n\r\n        tweet.tweet.split(' ').forEach(word => {\r\n            if (word[0] === '#') {\r\n                tweetSentence.push(<span className=\"text-blue-400 cursor-pointer\"> {word} </span>);\r\n            } else {\r\n                tweetSentence.push(word + ' ');\r\n            }\r\n        });\r\n        return tweetSentence;\r\n    }\r\n\r\n    return (\r\n        <div className=\"m-4 p-5 max-w-xl rounded-md shadow-md bg-gray-800\">\r\n            <TimePassed created_at={tweet.created_at} />\r\n            <div>\r\n                {buildTweetSentence()}\r\n            </div>\r\n            <div className=\"mt-3 flex items-center\">\r\n                <img\r\n                    className=\"mr-3 w-8 h-8 rounded-full\"\r\n                    src={tweet.user.photoURL}\r\n                    alt={tweet.user.name} />\r\n                <span className=\"text-blue-400 cursor-pointer relative username\">\r\n                    @{tweet.user.username}\r\n                    <div className=\"absolute top-6 left-0 bg-gray-800 border border-gray-600 text-gray-300 px-3 py-5 rounded-md userInfo z-10\" style={{ minWidth: 300 }}>\r\n                        <div className=\" flex flex-col items-center justify-center \">\r\n                            <img\r\n                                className=\"w-16 h-16 rounded-full\"\r\n                                src={tweet.user.photoURL}\r\n                                alt={tweet.user.name} />\r\n                            <span className=\"text-blue-400\"> @{tweet.user.username} </span>\r\n                            <span> {tweet.user.name} </span>\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet\r\n","import React from 'react'\r\nimport Tweet from './Tweet/Tweet'\r\n\r\nconst Tweets = ({ tweets, loadingMessage }) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                tweets.length > 0 ?\r\n                    tweets.map(tweet => <Tweet key={tweet.id} tweet={tweet} />) :\r\n                    <div className=\"m-4 p-5 max-w-2xl font-semibold text-2xl rounded-md shadow-md bg-gray-800\">\r\n                        {loadingMessage ? loadingMessage : 'Please wait. fetching data ...'}\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweets\r\n","import { useState, useEffect } from 'react';\r\nimport Tweets from '../../components/Tweets/Tweets';\r\nimport firebase from 'firebase';\r\n\r\nconst Feed = () => {\r\n\r\n    const [tweets, setTweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const database = firebase.database();\r\n\r\n        database.ref('tweets').orderByChild('created_at').on('value', snapshot => {\r\n\r\n            const tweetArray = [];\r\n            const tweetsResponse = snapshot.val();\r\n\r\n            setTweets([]);\r\n\r\n            if (tweetsResponse) {\r\n                Object.keys(tweetsResponse).forEach(key => {\r\n                    const tweet = {\r\n                        id: key,\r\n                        ...tweetsResponse[key]\r\n                    }\r\n                    tweetArray.push(tweet)\r\n                });\r\n                const tweetRevArray = tweetArray.reverse()\r\n                setTweets(tweetRevArray);\r\n            }\r\n            // console.log(tweetArray);\r\n        });\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"text-gray-300\">\r\n            <Tweets tweets={tweets} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\n\r\nconst SearchBar = ({ searchTerm, changeSearchTerm, searchTag }) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"m-4 text-gray-400 text-5xl\">Search</div>\r\n            <div className=\"flex items-center\">\r\n                <input\r\n                    type=\"text\"\r\n                    maxLength=\"20\"\r\n                    value={searchTerm}\r\n                    onChange={changeSearchTerm}\r\n                    className=\"px-4 py-2 mx-4 text-lg text-gray-300 bg-gray-800 rounded max-w-lg w-full focus:outline-none\" />\r\n                <button\r\n                    onClick={searchTag}\r\n                    className=\"ml-1 px-3 py-2 text-sm bg-blue-400 text-white rounded-md\"\r\n                >Search </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import { useState } from 'react';\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\"\r\nimport Tweets from './../../components/Tweets/Tweets';\r\nimport firebase from 'firebase';\r\n\r\nconst Trending = () => {\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [tweets, setTweets] = useState([]);\r\n\r\n\r\n    const searchTag = () => {\r\n\r\n        if (searchTerm.length === 0) {\r\n            alert('Please provide the search field');\r\n            return\r\n        }\r\n        const queryText = searchTerm[0] === '#' ? searchTerm : '#' + searchTerm;\r\n\r\n        const database = firebase.database();\r\n        database.ref('tweets')\r\n            .orderByChild('tag')\r\n            .startAt(queryText)\r\n            .endAt(queryText + '\\uf8ff')\r\n            .on('value', snapshot => {\r\n\r\n                const tweetArray = [];\r\n                const tweetsResponse = snapshot.val();\r\n                setTweets([]);\r\n                if (tweetsResponse) {\r\n                    Object.keys(tweetsResponse).forEach(key => {\r\n                        const tweet = {\r\n                            id: key,\r\n                            ...tweetsResponse[key]\r\n                        }\r\n                        tweetArray.push(tweet)\r\n                    });\r\n                    const tweetRevArray = tweetArray.reverse()\r\n                    setTweets(tweetRevArray);\r\n                }\r\n                // console.log(tweetArray);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-gray-400\">\r\n            <SearchBar\r\n                changeSearchTerm={(event) => { setSearchTerm(event.target.value) }}\r\n                searchTerm={searchTerm}\r\n                searchTag={searchTag}\r\n            />\r\n            <Tweets tweets={tweets} loadingMessage={'type tag to search ...'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trending\r\n","import firebase from 'firebase/app';\r\n\r\nexport const useUser = () => {\r\n    const user = firebase.auth().currentUser\r\n    return user ? {\r\n        name: user.displayName,\r\n        email: user.email,\r\n        photoURL: user.photoURL,\r\n        uid: user.uid\r\n    } : null\r\n}","import TimePassed from './../../../components/TimePassed/TimePassed';\r\n\r\nconst Notific = ({ notific }) => {\r\n    return (\r\n        <div className=\"m-4 p-5 max-w-xl rounded-md shadow-md bg-gray-800 text-gray-400\">\r\n            <TimePassed created_at={notific.created_at} />\r\n            <div className=\"mt-1\">\r\n                {notific.title}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notific\r\n","import firebase from 'firebase';\r\nimport { useEffect, useState } from 'react';\r\nimport { useUser } from './../../hooks/useUser';\r\nimport Notific from './Notific/Notific';\r\n\r\nconst Notification = () => {\r\n\r\n    const user = useUser();\r\n    const [notifications, setNotifications] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const database = firebase.database();\r\n\r\n        database.ref('/users/' + user.uid + '/notifications').orderByChild('created_at').on('value', snapshot => {\r\n            const notificationArray = [];\r\n            const notificationResponse = snapshot.val();\r\n\r\n            setNotifications([]);\r\n\r\n            if (notificationResponse) {\r\n                Object.keys(notificationResponse).forEach(key => {\r\n                    const notific = {\r\n                        id: key,\r\n                        ...notificationResponse[key]\r\n                    }\r\n                    notificationArray.push(notific)\r\n                });\r\n                const notificRevArray = notificationArray.reverse()\r\n                setNotifications(notificRevArray);\r\n            }\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {\r\n                notifications.length > 0 ?\r\n                    notifications.map(noti => <Notific key={noti.id} notific={noti} />) :\r\n                    <div className=\"m-4 p-5 max-w-2xl font-semibold text-2xl rounded-md shadow-md bg-gray-800 text-gray-300\">\r\n                        Please wait. fetching data ...\r\n                    </div>\r\n\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Feed from './../Feed/Feed';\r\nimport Trending from './../Trending/Trending';\r\nimport Notification from './../Notification/Notification';\r\nimport './Layout.css';\r\n\r\nconst Layout = () => {\r\n\r\n    return (\r\n\r\n        <div className=\"h-screen w-full overflow-y-scroll scrollbar\" >\r\n            <Switch>\r\n                <Route path=\"/feed\">\r\n                    <Feed />\r\n                </Route>\r\n                <Route path=\"/trending\">\r\n                    <Trending />\r\n                </Route>\r\n                <Route path=\"/notification\">\r\n                    <Notification />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                    <Redirect to=\"/feed\" />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SidenavItem = ({ title, icon, link }) => {\r\n\r\n    const classList = [\"m-3\", \"p-3\", \"text-4xl\", \"text-gray-600\", \"hover:text-gray-400\"]\r\n\r\n    if (title === 'twitter') {\r\n        classList.pop();\r\n        classList.pop();\r\n        classList.push('text-blue-400')\r\n    }\r\n\r\n    return (\r\n        <NavLink to={link}>\r\n            <div className={classList.join(' ')}>\r\n                {icon}\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default SidenavItem\r\n","import React from 'react';\r\nimport { useUser } from '../../hooks/useUser';\r\n\r\nconst Avatar = ({ toggleShowUserPorfile }) => {\r\n\r\n    const user = useUser();\r\n\r\n    return (\r\n        <div className=\"m-3 p-3\" onClick={toggleShowUserPorfile}>\r\n            <img className=\"w-12 h-12 rounded-full\" src={user.photoURL} alt=\"user avatar\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avatar\r\n","import React from 'react';\r\n\r\nconst TweetContext = React.createContext({\r\n    changeCreateTweet: () => { }\r\n});\r\n\r\nexport { TweetContext };","import { useContext } from 'react';\r\nimport { RiQuillPenFill } from 'react-icons/ri';\r\nimport { TweetContext } from './../../../Context/TweetContext';\r\n\r\nconst CreateTweet = () => {\r\n\r\n    const tweetContext = useContext(TweetContext);\r\n\r\n    return (\r\n        <div className=\"m-3 p-3 text-3xl\" onClick={tweetContext.changeCreateTweet}>\r\n            <div className=\"w-12 h-12 bg-blue-400 text-gray-100 rounded-full flex justify-center items-center\">\r\n                <RiQuillPenFill />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTweet\r\n","import { useState, useContext } from \"react\";\r\nimport { AiFillCloseCircle } from 'react-icons/ai';\r\nimport { TweetContext } from \"../../../../Context/TweetContext\";\r\nimport { useUser } from './../../../../hooks/useUser';\r\nimport firebase from 'firebase';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst CreateTweetBox = ({ history }) => {\r\n\r\n    const [tweetText, setTweetText] = useState('');\r\n    const tweetContext = useContext(TweetContext);\r\n    const user = useUser();\r\n\r\n    const saveTweet = () => {\r\n\r\n        if (tweetText.length < 5) {\r\n            alert('not valid text. Minimum lenght shold be greater than 4');\r\n            return\r\n        } else if (tweetText.length > 120) {\r\n            alert('length is to big. Maximum lenght shold be less than 120');\r\n            return;\r\n        }\r\n\r\n        let tag = 'default';\r\n        tweetText.split(' ').forEach(word => {\r\n            if (word[0] === '#') {\r\n                tag = word;\r\n            }\r\n        });\r\n\r\n        const payload = {\r\n            tweet: tweetText,\r\n            tag,\r\n            created_at: Date.now(),\r\n            user: {\r\n                name: user.name,\r\n                photoURL: user.photoURL,\r\n                uid: user.uid,\r\n                username: user.email.split('@')[0]\r\n            }\r\n        };\r\n        const timeStamp = Date.now() + '-tweet-' + Math.floor(Math.random() * 10000000)\r\n        firebase.database().ref('/tweets/' + timeStamp).set(payload);\r\n        tweetContext.changeCreateTweet();\r\n\r\n        // redirect to feed page\r\n        history.push('/feed');\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-screen h-screen absolute top-0 left-0 bg-gray-900 bg-opacity-90 z-20\">\r\n            <div className=\"bg-gray-800 rounded-md py-5 px-8  max-w-lg mx-auto my-10 relative\">\r\n                <div className=\"text-blue-400 text-4xl absolute -top-2 -right-2\"\r\n                    onClick={tweetContext.changeCreateTweet}\r\n                > <AiFillCloseCircle />\r\n                </div>\r\n                <p className=\"mb-2 text-xl font-medium tracking-wider text-blue-400\"> Write Your Tweet  </p>\r\n                <textarea\r\n                    rows=\"3\"\r\n                    className=\"px-4 py-2 w-full border rounded-md bg-gray-700 text-gray-300 text-lg focus:outline-none\"\r\n                    maxLength=\"120\"\r\n                    placeholder=\"Tweet\" onChange={(event) => setTweetText(event.target.value)}>\r\n\r\n                </textarea>\r\n                <div className=\"text-sm text-gray-400\"> we are currently able track only one hash (#) tag. So while Writing tweet please use only one tag. If you add more than one tag we only keep track last tag of your tweet.</div>\r\n                <div className=\"flex justify-end\">\r\n                    <button\r\n                        onClick={saveTweet}\r\n                        className=\"px-4 py-2 my-2 text-sm bg-blue-400 text-white rounded-md tracking-wider\">\r\n                        Tweet\r\n                        </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CreateTweetBox);\r\n\r\n\r\n","import React from 'react'\r\nimport { AiFillCloseCircle } from 'react-icons/ai';\r\nimport { useUser } from '../../hooks/useUser';\r\n\r\n\r\nconst UserProfile = ({ toggleShowUserPorfile, signOut }) => {\r\n\r\n    const user = useUser();\r\n\r\n    return (\r\n        <div className=\"w-screen h-screen absolute top-0 left-0 bg-gray-900 bg-opacity-90 z-20\">\r\n            <div className=\"bg-gray-800 rounded-md py-5 px-8  max-w-xl mx-auto my-10 relative\">\r\n                <div className=\"text-blue-400 text-4xl absolute -top-2 -right-2\"\r\n                    onClick={toggleShowUserPorfile}\r\n                > <AiFillCloseCircle />\r\n                </div>\r\n                <div className=\"flex flex-col items-center text-gray-300\">\r\n                    <img src={user.photoURL} alt={user.name} className=\"rounded-full\" />\r\n                    <span className=\"mt-2 text-blue-400\"> @{user.email.split('@')[0]} </span>\r\n                    <span className=\"mt-4 text-2xl\"> {user.name} </span>\r\n                    <span className=\"mt-2\"> {user.email} </span>\r\n                    <button onClick={signOut} className=\"px-4 py-1 mt-10 rounded-md bg-red-400 text-white text-sm font-medium\"> Log out </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile;\r\n","import { useState } from 'react';\r\nimport SidenavItem from \"./SidenavItem/SidenavItem\";\r\nimport { FaTwitter, FaSlackHash } from 'react-icons/fa';\r\nimport { HiHome, HiBell } from 'react-icons/hi';\r\nimport Avatar from \"../../components/Avatar/Avatar\";\r\nimport CreateTweet from \"./CreateTweet/CreateTweet\";\r\nimport CreateTweetBox from './CreateTweet/CreateTweetBox/CreateTweetBox';\r\nimport { TweetContext } from './../../Context/TweetContext';\r\nimport UserProfile from './../../components/UserProfile/UserProfile';\r\n\r\nconst Sidenav = ({ signOut }) => {\r\n\r\n    const [createTweet, setCreateTweet] = useState(false);\r\n    const [showUserPorfile, setShowUserPorfile] = useState(false);\r\n\r\n    const navList = [\r\n        { title: 'twitter', icon: <FaTwitter />, link: '' },\r\n        { title: 'feed', icon: <HiHome />, link: '/feed' },\r\n        { title: 'trending', icon: <FaSlackHash />, link: '/trending' },\r\n        { title: 'notification', icon: <HiBell />, link: '/notification' },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <TweetContext.Provider value={{ changeCreateTweet: () => setCreateTweet(!createTweet) }}>\r\n            { createTweet ?\r\n                <CreateTweetBox /> :\r\n                null\r\n            }\r\n            { showUserPorfile ?\r\n                <UserProfile signOut={signOut} toggleShowUserPorfile={() => setShowUserPorfile(!showUserPorfile)} /> :\r\n                null\r\n            }\r\n            <div className=\"w-16 md:w-24 lg:w-32 flex flex-col justify-between\">\r\n                <div>\r\n                    {navList.map(navItem =>\r\n                        <SidenavItem\r\n                            key={navItem.title}\r\n                            title={navItem.title}\r\n                            icon={navItem.icon}\r\n                            link={navItem.link}\r\n                        />\r\n                    )}\r\n\r\n                    <CreateTweet />\r\n                </div>\r\n                <Avatar toggleShowUserPorfile={() => setShowUserPorfile(!showUserPorfile)} />\r\n            </div>\r\n        </TweetContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Sidenav\r\n","import { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Register from \"./components/Register/Register\";\r\nimport Layout from \"./containers/Layout/Layout\";\r\nimport Sidenav from \"./containers/Sidenav/Sidenav\";\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst App = () => {\r\n\r\n    const [authState, setAuthState] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            user ? setAuthState(true) : setAuthState(false);\r\n        });\r\n    }, [])\r\n\r\n    const signInWithGoogleHandler = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth()\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                setAuthState(true);\r\n\r\n                const payload = {\r\n                    name: result.user.displayName,\r\n                    email: result.user.email,\r\n                    photoURL: result.user.photoURL\r\n                };\r\n\r\n                const notificationsPaylaod = {\r\n                    title: 'Welcome ' + result.user.displayName + ' to twitter clone app. This app is build by Ajay Kumbhar to learn react skill. Take tour of this app. Have fun with your friend. Don\\'t misuse it otherwise you will be block by system. Have a great day.',\r\n                    created_at: Date.now(),\r\n                }\r\n                const timeStamp = Date.now() + '-notification-' + Math.floor(Math.random() * 10000000)\r\n\r\n                firebase.database().ref('/users/' + result.user.uid + '/info').set(payload);\r\n                firebase.database().ref('/users/' + result.user.uid + '/notifications/' + timeStamp).set(notificationsPaylaod);\r\n\r\n            }).catch((error) => {\r\n                alert(error.message)\r\n            });\r\n    }\r\n\r\n    const signOut = () => {\r\n        firebase.auth().signOut();\r\n        setAuthState(false);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            {\r\n                !authState ?\r\n                    <Register signInWithGoogle={signInWithGoogleHandler} /> :\r\n                    <div className=\"bg-gray-900 flex w-screen h-screen\">\r\n                        <Sidenav signOut={signOut} />\r\n                        <Layout />\r\n                    </div>\r\n            }\r\n        </Router >\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport firebase from \"firebase/app\";\r\n\r\nimport { firebaseConfig } from './config/firebase.config';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// var firebaseConfig = {\r\n//     apiKey: \"API_KEY\",\r\n//     authDomain: \"PROJECT_ID.firebaseapp.com\",\r\n//     databaseURL: \"https://PROJECT_ID.firebaseio.com\",\r\n//     projectId: \"PROJECT_ID\",\r\n//     storageBucket: \"PROJECT_ID.appspot.com\",\r\n//     messagingSenderId: \"SENDER_ID\",\r\n//     appId: \"APP_ID\",\r\n//     measurementId: \"G-MEASUREMENT_ID\",\r\n// };\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDrd3xgyVmzgYr_HRc1YzC2uASkn9yavzM\",\r\n    authDomain: \"ajaykumbhar-reactapp.firebaseapp.com\",\r\n    databaseURL: \"https://ajaykumbhar-reactapp-default-rtdb.firebaseio.com\",\r\n    projectId: \"ajaykumbhar-reactapp\",\r\n    storageBucket: \"ajaykumbhar-reactapp.appspot.com\",\r\n    messagingSenderId: \"867659412513\",\r\n    appId: \"1:867659412513:web:1744e98a748e52d3979f60\",\r\n    measurementId: \"G-4CLZ5XNG2J\"\r\n};\r\n\r\nexport { firebaseConfig };"],"sourceRoot":""}